---
name: CI
'on': [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-2

      - run: poetry install
      - name: Test
        run: poetry run make test
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            CMD_BUILD: |
              brew install create-dmg
              brew install ffmpeg
              poetry run make bundle_mac
          - os: ubuntu-latest
            CMD_BUILD: |
              sudo apt update && sudo apt install ffmpeg
              poetry run make bundle_linux
          - os: windows-latest
            CMD_BUILD: |
              choco install ffmpeg
              poetry run make bundle_windows
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-2

      - run: poetry install
      - run: ${{ matrix.CMD_BUILD }}
        env:
          BUZZ_VERSION: ${{ github.ref_name }}
      - uses: actions/upload-artifact@v3
        with:
          name: Buzz
          path: |
            dist/Buzz*.dmg
            dist/Buzz*.tar.gz
  release:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Buzz
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Buzz*.tar.gz
            Buzz*.dmg
