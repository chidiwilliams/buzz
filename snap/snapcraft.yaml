# Development notes:
# - To build the snap run `snapcraft clean` and `snapcraft pack --verbose`
# - To install local snap `snap install ./buzz_*.snap --dangerous`
name: buzz
base: core24
version: git
title: Buzz
summary: Buzz, offline audio transcription and translation
website: https://buzzcaptions.com
source-code: https://github.com/chidiwilliams/buzz
issues: https://github.com/chidiwilliams/buzz/issues
contact: https://github.com/chidiwilliams
description: |
  Buzz transcribes and translates audio to text offline using OpenAI's Whisper.
  Import audio and video files into Buzz and export them as TXT, SRT, or VTT files.
  Buzz supports Whisper, Whisper.cpp, Faster Whisper, Whisper-compatible models
  from the Hugging Face repository, and the OpenAI Whisper API.
grade: stable
confinement: strict
license: MIT
icon: buzz/assets/buzz.svg

platforms:
  amd64:

parts:
  buzz:
    plugin: uv
    source: .
    build-snaps:
      - astral-uv
    stage-snaps:
      - astral-uv
    build-packages:
      - wget
      - portaudio19-dev
      - qt6-declarative-dev
      - qt6-multimedia-dev
      - libvulkan-dev
      - ccache
      - cmake
      - gettext
      - python3
      - python3-polib
    build-environment:
      - UV_PYTHON: python3
      - UV_FROZEN: "false"
      - UV_NO_CACHE: "true"
      - UV_INDEX_STRATEGY: "unsafe-best-match"
    stage-packages:
      - python3
      - libgcc-s1
      - libc6
      # Audio
      - ffmpeg
      - libportaudio2
      - libpulse0
      - libasound2
      - libasound2-plugins
      - libasound2-plugins-extra
      - libyaml-dev
      - gstreamer1.0-plugins-good
      - gstreamer1.0-plugins-base-apps
      - gstreamer1.0-pulseaudio
      - libgstreamer1.0-0
      - libgstreamer-plugins-base1.0-0
      - libgstreamer-plugins-good1.0-0
      # Display
      - libxkbcommon-x11-0
      - libxcb-icccm4
      - libxcb-image0
      - libxcb-keysyms1
      - libxcb-randr0
      - libxcb-render-util0
      - libxcb-xinerama0
      - libxcb-shape0
      - libxcb-cursor0
      # GPU
      - libglu1-mesa
      - libvulkan1
      - mesa-vulkan-drivers
    override-build: |
      wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | tee /etc/apt/trusted.gpg.d/lunarg.asc
      wget -qO /etc/apt/sources.list.d/lunarg-vulkan-noble.list http://packages.lunarg.com/vulkan/lunarg-vulkan-noble.list
      apt update
      apt install -y vulkan-sdk

      # Clear cache to save space on CI
      apt clean
      
      uv add --no-sync torch==2.7.1+cu128 torchaudio==2.7.1+cu128 --index https://download.pytorch.org/whl/cu128      
      uv add --no-sync nvidia-cublas-cu12==12.8.3.14 nvidia-cuda-cupti-cu12==12.8.57 nvidia-cuda-nvrtc-cu12==12.8.61 nvidia-cuda-runtime-cu12==12.8.57 nvidia-cudnn-cu12==9.7.1.26 nvidia-cufft-cu12==11.3.3.41 nvidia-curand-cu12==10.3.9.55 nvidia-cusolver-cu12==11.7.2.55 nvidia-cusparse-cu12==12.5.7.53 nvidia-cusparselt-cu12==0.6.3 nvidia-nvjitlink-cu12==12.8.61 nvidia-nvtx-cu12==12.8.55 --index https://pypi.ngc.nvidia.com
      
      # Run default build steps  
      craftctl default 
      
      source $CRAFT_PART_BUILD/.venv/bin/activate
      
      uv cache clean
      uv run pip cache purge
      
      uv build
      mkdir $CRAFT_PART_INSTALL/buzz
      cp -r $CRAFT_PART_BUILD/buzz/whisper_cpp $CRAFT_PART_INSTALL/buzz/
      
      # Create desktop file
      mkdir -p $CRAFT_PART_INSTALL/usr/share/applications
      cp $CRAFT_PART_BUILD/buzz.desktop $CRAFT_PART_INSTALL/usr/share/applications/

    stage:
      - '*'

    prime:
      - '*'

  gpu-2404:
    after: [ buzz ]
    source: https://github.com/canonical/gpu-snap.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/gpu-2404-cleanup mesa-2404
      # Workaround for https://bugs.launchpad.net/snapd/+bug/2055273
      mkdir -p "${CRAFT_PRIME}/gpu-2404"
    prime:
      - bin/gpu-2404-wrapper

apps:
  buzz:
    extensions:
      - gnome
    command-chain:
      - bin/gpu-2404-wrapper
    command: bin/uv run buzz
    desktop: usr/share/applications/buzz.desktop
    environment:
      PATH: $SNAP/usr/bin:$SNAP/bin:$PATH
      LD_LIBRARY_PATH: $SNAP/lib/python3.12/site-packages/nvidia/cudnn/lib:$SNAP/lib/python3.12/site-packages/PyQt6:$SNAP/lib/python3.12/site-packages/PyQt6/Qt6/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/lapack:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/blas:$SNAP:$LD_LIBRARY_PATH
      PYTHONPATH: $SNAP/lib/python3.12/site-packages/PyQt6:$SNAP/lib/python3.12/site-packages/PyQt6/Qt6/lib:$SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.12/site-packages:$SNAP/usr/local/lib/python3.12/dist-packages:$SNAP/usr/lib/python3.12/dist-packages:$PYTHONPATH
      QT_MEDIA_BACKEND: gstreamer
    plugs:
      - x11
      - unity7
      - wayland
      - home
      - network
      - network-bind
      - desktop
      - desktop-legacy
      - gsettings
      - opengl
      - removable-media
      - audio-playback
      - audio-record
      - password-manager-service