# Development notes:
# - To build the snap run `snapcraft clean` and `snapcraft --debug --verbosity verbose`
# - To install local snap `snap install ./buzz_*.snap --dangerous`
# - To check for issues `snapcraft lint buzz_*.snap`
name: buzz
base: core22
version: git
summary: Buzz, offline audio transcription and translation
website: https://buzzcaptions.com
source-code: https://github.com/chidiwilliams/buzz
issues: https://github.com/chidiwilliams/buzz/issues
description: |
  Buzz transcribes and translates audio to text offline using OpenAI's Whisper.
  Import audio and video files into Buzz and export them as TXT, SRT, or VTT files.
  Buzz supports Whisper, Whisper.cpp, Faster Whisper, Whisper-compatible models
  from the Hugging Face repository, and the OpenAI Whisper API.
grade: stable
confinement: strict
license: MIT
icon: buzz/assets/buzz.svg

architectures:
  - build-on: amd64

parts:
  alsa-pulseaudio:
    plugin: dump
    source: .
    override-pull: |
      mkdir etc -p
      cat > etc/asound.conf <<EOF
      pcm.!default {
          type pulse
          fallback "sysdefault"
          hint {
              show on
              description "Default ALSA Output (currently PulseAudio Sound Server)"
          }
      }
      ctl.!default {
          type pulse
          fallback "sysdefault"
      }
      EOF

  buzz:
    plugin: python
    python-packages:
      - numpy==1.26.4  # version from .lock file so sox can install
      - typing-extensions==4.12.2  # version from .lock file so sox can install
    source: .
    build-packages:
      - portaudio19-dev
      - build-essential
      - git
      - sox
    stage-packages:
      # Theme support and platform modules
      - qt5-gtk-platformtheme
      - qt6-gtk-platformtheme
      - appmenu-gtk3-module
      - appmenu-gtk-module-common
      - libcanberra-gtk3-module
      # Audio
      - ffmpeg
      - libportaudio2
      - libpulse0
      - libasound2-plugins
      - libasound2-plugins-extra
      - libyaml-dev
      - libegl1
      - gstreamer1.0-plugins-good
      - gstreamer1.0-plugins-base-apps
      - gstreamer1.0-pulseaudio
      - libgstreamer1.0-0
      - libgstreamer-plugins-base1.0-0
      - libgstreamer-plugins-good1.0-0
      - qt6-declarative-dev
      - qt6-multimedia-dev
      # Display
      - libxkbcommon-x11-0
      - libxcb-icccm4
      - libxcb-image0
      - libxcb-keysyms1
      - libxcb-randr0
      - libxcb-render-util0
      - libxcb-xinerama0
      - libxcb-shape0
      - libxcb-cursor0
      # GPU
      - libglu1-mesa
    override-build: |     
      # Run default build commands     
      craftctl default
      
      # Update ctranslate to ensure it has no execstack issues
      pip uninstall -y ctranslate2
      pip install ctranslate2==4.6.0
      
      # Clean caches to reclaim space on CI
      apt-get autoremove -y
      apt-get clean
      pip cache purge
      
      mkdir $CRAFT_PART_INSTALL/buzz
      cp $CRAFT_PART_BUILD/buzz/whisper_cpp.py $CRAFT_PART_INSTALL/buzz/
      cp $CRAFT_PART_BUILD/buzz/libwhisper.so $CRAFT_PART_INSTALL/buzz/
      
      mkdir -p $SNAPCRAFT_PRIME/bin
      cp $CRAFT_PART_BUILD/flatpak/run-buzz.sh $SNAPCRAFT_PRIME/bin/run-buzz.sh
      chmod +x $SNAPCRAFT_PRIME/bin/run-buzz.sh
      
      mkdir -p $SNAPCRAFT_PRIME/usr/share/applications/
      cp buzz.desktop $SNAPCRAFT_PRIME/usr/share/applications/buzz.desktop

  # This part removes all the files in this snap which already exist in
  # connected content and base snaps. Since these files will be available
  # at runtime from the content and base snaps, they do not need to be
  # included in this snap itself.
  #
  # More info: https://forum.snapcraft.io/t/reducing-the-size-of-desktop-snaps/17280#heading--cleanup-part
  cleanup:
    after:  # Make this part run last; list all your other parts here
      - buzz
      - alsa-pulseaudio
    plugin: nil
    build-snaps:  # List all content-snaps and base snaps you're using here
      - core22
      - gnome-42-2204-sdk
    override-prime: |
      set -eux
      for snap in core22 gnome-42-2204-sdk; do  # List all content-snaps and base snaps you're using here
        cd "/snap/$snap/current" && find . -type f,l -exec rm -f "$CRAFT_PRIME/{}" \;
      done

apps:
  buzz:
    extensions: [gnome]
    command: bin/run-buzz.sh
    desktop: usr/share/applications/buzz.desktop
    environment:
      PATH: $SNAP/usr/bin:$SNAP/bin:$PATH
      LD_LIBRARY_PATH: $SNAP/lib/python3.10/site-packages/nvidia/cudnn/lib:$SNAP/lib/python3.10/site-packages/PyQt6:$SNAP/lib/python3.10/site-packages/PyQt6/Qt6/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/lapack:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/blas:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pulseaudio:$SNAP:$LD_LIBRARY_PATH
      PYTHONPATH: $SNAP/lib/python3.10/site-packages/PyQt6:$SNAP/lib/python3.10/site-packages/PyQt6/Qt6/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pulseaudio:$SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.10/site-packages:$SNAP/usr/local/lib/python3.10/dist-packages:$SNAP/usr/lib/python3.10/dist-packages:$PYTHONPATH
      QT_QPA_PLATFORMTHEME: 'gnome'
      GTK_USE_PORTAL: '1'
      GDK_DEBUG: 'portals'
      QT_MEDIA_BACKEND: gstreamer
      ALSA_CONFIG_PATH: $SNAP/etc/asound.conf
      XDG_CONFIG_DIRS: $SNAP/etc/xdg:$XDG_CONFIG_DIRS
      XDG_DATA_DIRS: $SNAP/usr/share:$XDG_DATA_DIRS
    plugs:
      - x11
      - unity7
      - wayland
      - home
      - network
      - network-bind
      - desktop
      - desktop-legacy
      - gsettings
      - opengl
      - removable-media
      - audio-playback
      - audio-record
      - password-manager-service

plugs:
  gtk-2-engines:
    interface: content
    target: $SNAP/lib/gtk-2.0
    default-provider: gtk2-common-themes
  gtk-3-themes:
    interface: content
    target: $SNAP/share/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/share/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/share/sounds
    default-provider: gtk-common-themes

layout:
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib
